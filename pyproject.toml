[project]
name = "streaming-pipeline"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "confluent-kafka>=2.8.0",
    "pandas>=2.2.3",
    "pyspark>=3.5.4",
    "python-dotenv>=1.0.1",
    "road-dataset",
]

[dependency-groups]
dev = ["ipykernel>=6.29.5", "ruff>=0.9.3", "taskipy>=1.14.1"]

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.format]
preview = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "W",  # pycodestyle
    "PL", # pylint
    "PT", # flake8-pytest
    "UP", # pyupgrade,
    "I",  # isort
]

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
drain_kafka = 'task drain_kafka_control_power drain_kafka_accelerometer_gyro'
drain_kafka_control_power = 'kafkacat -b kafka-cpc.certi.org.br:31289 -t "control_power" -o beginning -C -e -G spark_consumer_group'
drain_kafka_accelerometer_gyro = 'kafkacat -b kafka-cpc.certi.org.br:31289 -t "accelerometer_gyro" -o beginning -C -e -G spark_consumer_group'

[tool.uv.sources]
road-dataset = { git = "https://gitlab.com/AlessioMascolini/roaddataset/" }
